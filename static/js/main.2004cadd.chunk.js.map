{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","index.js","registerServiceWorker.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","minLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","commnet","outline","type","isOpen","toggle","onSubmit","handleComment","md","size","select","model","htmlFor","text","placeholder","validators","maxLength","show","messages","textarea","rows","value","color","Component","RenderDish","RenderComments","comments","comment","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","offset","check","checkbox","About","RenderLeader","left","object","body","heading","RenderContent","leaders","title","list","Header","isNavOpen","toggleNav","handleLogin","console","log","event","alert","username","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","addComment","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","JSON","stringify","headers","credentials","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller"],"mappings":"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","file":"static/js/main.2004cadd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n\treturn(\r\n\t\t<div className='col-12'>\r\n\t\t   <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n\t\t   <p>Loading ...</p>\r\n\t\t</div>\r\n\t);\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: \"scale(0.5) translateY(-50%)\"\r\n        }}\r\n      >\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? (\r\n              <CardSubtitle>{item.designation}</CardSubtitle>\r\n            ) : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.leader}\r\n            isLoading={props.leaderLoading}\r\n            errMess={props.leaderErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n \r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <Loading />\r\n                   </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <h4>{props.dishes.errMess}</h4>\r\n                   </div>\r\n                </div>\r\n            );\r\n        }\r\n        else        \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem, \r\n    Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n      this.toggleModal();\r\n      this.props.postComment(this.props.dishId, values.rating ,values.author ,values.commnet);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline type=\"submit\" onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\" ></span>\r\n                    Submit Comment\r\n                </Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={this.handleComment}>\r\n                            <Row className=\"form-group\" >\r\n                                <Label md={2} >Rating</Label>\r\n                                <Col md={{size: 12}}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\" >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={4} >Your Name</Label>\r\n                                <Col md={{size: 12}} >\r\n                                    <Control.text \r\n                                        model=\".name\" \r\n                                        id=\"name\" \r\n                                        placeholder=\"Your Name\" \r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            maxLength: maxLength(15),\r\n                                            minLength: minLength(3)\r\n                                        }} />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".name\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Name is required ',\r\n                                                maxLength: 'Must be less than 15 o less characters ',\r\n                                                minLength: 'Must be greater than 2 characters'\r\n                                            }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2} >Comment</Label>\r\n                                <Col md={12} >\r\n                                    <Control.textarea \r\n                                        model=\".comment\" \r\n                                        id=\"comment\" \r\n                                        placeholder=\"comment\" \r\n                                        rows=\"5\" \r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    \r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}></CardImg>\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if (comments != null)\r\n        return(\r\n           <div className=\"col-12 col-md-5 m-1\">\r\n              <h4>Comments</h4>\r\n              <ul className=\"list-unstyled\">\r\n                 <Stagger in>\r\n                     {comments.map((comment) => {\r\n                         return(\r\n                            <Fade in>\r\n                                <li key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>\r\n                                        -- {comment.author}{\" \"}\r\n                                        {new Intl.DateTimeFormat(\"en-US\", {\r\n                                          year: \"numeric\",\r\n                                          month: \"short\",\r\n                                          day: \"2-digit\",\r\n                                        }).format(new Date(Date.parse(comment.date)))}\r\n                                    </p>\r\n                                </li> \r\n                            </Fade>\r\n                         );\r\n                     })}\r\n                 </Stagger>\r\n              </ul>\r\n              <CommentForm dishId={dishId} postComment={postComment} />\r\n           </div>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n        \r\n               \r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n               <div className=\"row\">\r\n                   <Loading />\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n               <div className=\"row\">\r\n                   <h4>{props.errMess}</h4>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments} \r\n                        postComment={props.postComment}\r\n                        dishId={props.dishId} />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        else\r\n          return(\r\n            <div></div>\r\n          );\r\n}\r\n\r\n\r\n\r\n\r\nexport default DishDetail;","import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\nconst isNumber = val => !isNaN(Number(val));\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.props.resetFeedbackForm();\r\n    this.props.postFeedback(\r\n      values.firstname,\r\n      values.lastname,\r\n      values.telnum,\r\n      values.email,\r\n      values.agree,\r\n      values.contactType,\r\n      values.message\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={values => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 numbers\",\r\n                      maxLength: \"Must be 15 numbers or less\",\r\n                      isNumber: \"Must be a number\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      validEmail: \"Invalid Email Address\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows={12}\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction About(props) {\r\n  function RenderLeader({ leader }) {\r\n    return (\r\n      <Media className=\"mt-5\">\r\n        <Media left className=\"mr-5\">\r\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n        </Media>\r\n        <Media body>\r\n          <Media heading>{leader.name}</Media>\r\n          <p>{leader.designation}</p>\r\n          {leader.description}\r\n        </Media>\r\n      </Media>\r\n    );\r\n  }\r\n\r\n  function RenderContent({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n      return <Loading />;\r\n    } else if (errMess) {\r\n      return <h4>{errMess}</h4>;\r\n    } else\r\n      return (\r\n        <Stagger in>\r\n          {props.leaders.map(leader => (\r\n            <Fade in key={leader.id}>\r\n              <RenderLeader key={leader.id} leader={leader} />\r\n            </Fade>\r\n          ))}\r\n        </Stagger>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{\" \"}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Started</dt>\r\n                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                <dd className=\"col-6\">$1,250,375</dd>\r\n                <dt className=\"col-6\">Employees</dt>\r\n                <dd className=\"col-6\">40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Media list>\r\n            <RenderContent\r\n              leaders={props.leader}\r\n              isLoading={props.leaderLoading}\r\n              errMess={props.leaderErrMess}\r\n            />\r\n          </Media>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        console.log(\"toggleModal is working\");\r\n        this.setState({\r\n          isModalOpen: this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n      \r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to=\" /home\"><span className=\"fa fa-home fa-lg\"></span> Home </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the Worlds best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                   <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                       <ModalBody>\r\n                       \r\n                          <Form onSubmit={this.handleLogin}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"username\">Username</Label>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                        innerRef={(input) => this.username = input} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                        innerRef={(input) => this.password = input}  />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input}  />\r\n                                        Remember me\r\n                                    </Label>\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                            </Form>\r\n                            \r\n                       </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = comment => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + \"comments\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => {\r\n      console.log(\"post comments\", error.message);\r\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => dispatch => {\r\n  dispatch(dishesLoading());\r\n\r\n  return fetch(baseUrl + \"dishes\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = errmess => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addDishes = dishes => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errmess => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => dispatch => {\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = errmess => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addPromos = promos => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (\r\n  firstname,\r\n  lastname,\r\n  telnum,\r\n  email,\r\n  agree,\r\n  contactType,\r\n  message\r\n  ) => dispatch => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response =>\r\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error => {\r\n      console.log(\"post feedbacks\", error.message);\r\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n    });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"react-redux-form\";\r\nimport Home from \"./HomeComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport Dishdetail from \"./DishdetailComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport AboutUs from \"./AboutComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport {\r\n  postComment,\r\n  postFeedback,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders\r\n} from \"../redux/ActionCreators\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message\r\n  ) =>\r\n    dispatch(\r\n      postFeedback(\r\n        firstname,\r\n        lastname,\r\n        telnum,\r\n        email,\r\n        agree,\r\n        contactType,\r\n        message\r\n      )\r\n    )\r\n});\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={\r\n            this.props.leaders.leaders.filter(leader => leader.featured)[0]\r\n          }\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <Dishdetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              dish => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            comment => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          addComment={this.props.addComment}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <TransitionGroup>\r\n            <CSSTransition\r\n              key={this.props.location.key}\r\n              classNames=\"page\"\r\n              timeout={300}\r\n            >\r\n              <Switch location={this.props.location}>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route\r\n                  exact\r\n                  path=\"/aboutus\"\r\n                  component={() => (\r\n                    <AboutUs\r\n                      leaders={this.props.leaders.leaders}\r\n                      leaderLoading={this.props.leaders.isLoading}\r\n                      leaderErrMess={this.props.leaders.errMess}\r\n                    />\r\n                  )}\r\n                />\r\n                } />\r\n                <Route\r\n                  exact\r\n                  path=\"/menu\"\r\n                  component={() => <Menu dishes={this.props.dishes} />}\r\n                />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                <Route\r\n                  exact\r\n                  path=\"/contactus\"\r\n                  component={() => (\r\n                    <Contact\r\n                      resetFeedbackForm={this.props.resetFeedbackForm}\r\n                      postFeedback={this.props.postFeedback}\r\n                    />\r\n                  )}\r\n                />\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Main)\r\n);","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n\t   isLoading: true,\r\n\t   errMess: null,\r\n\t   dishes: []\r\n} ,action) => {\r\n\tswitch(action.type){\r\n\t\tcase ActionTypes.ADD_DISHES:\r\n\t\t    return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n\t\tcase ActionTypes.DISHES_LOADING:\r\n\t\t    return {...state, isLoading: true, errMess: null, dishes: []}\r\n         \r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload ,dishes: []};\r\n\t\tdefault:\r\n\t\t     return state;\r\n\t}\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,errMess: null,promotions:[]} , action) => {\r\n\t\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (\r\n  state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","export const InitialFeedback = {\r\n\tfirstname: '',\r\n\tlastname: '',\r\n\ttelnum: '',\r\n\tagree: false,\r\n\tcontactType: 'Tel.',\r\n\tmessage: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n    \t<Provider store = {store}>\n\t    \t<BrowserRouter>\n\t\t\t     <div className=\"App\">\t\t      \n\t\t\t       <Main/>\n\t\t\t     </div>\n\t      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers ,applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n          registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            installingWorker.onstatechange = () => {\r\n              if (installingWorker.state === 'installed') {\r\n                if (navigator.serviceWorker.controller) {\r\n                  // At this point, the old content will have been purged and\r\n                  // the fresh content will have been added to the cache.\r\n                  // It's the perfect time to display a \"New content is\r\n                  // available; please refresh.\" message in your web app.\r\n                  console.log('New content is available; please refresh.');\r\n                } else {\r\n                  // At this point, everything has been precached.\r\n                  // It's the perfect time to display a\r\n                  // \"Content is cached for offline use.\" message.\r\n                  console.log('Content is cached for offline use.');\r\n                }\r\n              }\r\n            };\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during service worker registration:', error);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}